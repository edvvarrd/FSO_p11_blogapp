name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment-pipeline:
    runs-on: ubuntu-20.04
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      SECRET: ${{ secrets.SECRET }}
      PORT: ${{ secrets.PORT }}
    steps:
      - name: Fetch repository
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies for backend
        run: npm install
      - name: Install dependencies for frontend
        working-directory: ./client
        run: npm install
      - name: Lint
        run: npm run eslint
      - name: Build client
        working-directory: ./client
        run: npm run build
      - name: Unit test backend
        run: npm run test
      - name: Unit test frontend
        working-directory: ./client
        run: npm run test
      - name: E2E test
        uses: cypress-io/github-action@v6
        with:
          start: npm run start:test
          wait-on: http://localhost:5000
      - name: Deploy
        if: ${{ github.event_name == 'push' }}
        run: curl https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Success
        if: ${{ github.event_name == 'push' && success() }}
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Deployment to ${{ github.repository }} by ${{ github.triggering_actor }} succeeded!"
      - name: Failure
        if: ${{ github.event_name == 'push' && failure() }}
        uses: discord-actions/message@v2
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          message: "Deployment to ${{ github.repository }} by ${{ github.triggering_actor }} failed! Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})"
  tag_release:
    needs: [deployment-pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version
        if: ${{ github.event_name == 'push' && !(contains( join( toJson(github.event.commits.*.message) ), '#skip')) }}
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main